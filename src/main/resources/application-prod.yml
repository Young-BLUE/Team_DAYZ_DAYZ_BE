spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_ID}
    password: ${DB_PASSWORD}
    url: ${DB_URL}
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    open-in-view: false
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
  data:
    web:
      pageable:
        default-page-size: 20
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            client-id: ${KAKAO_RESTAPI_KEY}
            client-secret: ${KAKAO_CLIENT_SECRETE}
            scope: profile_nickname, profile_image
            redirect-uri: http://${SERVER_HOST}/login/oauth2/code/{registrationId}
            authorization-grant-type: authorization_code
            client-authentication-method: POST
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY_ID}
      secretKey: ${AWS_SECRET_ACCESS_KEY}
    s3:
      bucket: ${BUCKET_NAME}
      bucket_path: ${BUCKET_PATH} # 이미지 저장 시 이 부분을 불러와서 URL 파싱을 진행한다.
    region:
      static: ap-northeast-2
    stack:
      auto: false
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS_LOCAL}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: '*'
  max-age: 3600
server:
  port: 63458
jwt:
  header: Authorization
  issuer: dayz
  client-secret: ${JWT_CLIENT_SECRETE}
  expiry-seconds: 60000
logging.level:
  org.hibernate.SQL: debug
